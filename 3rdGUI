Appbar e search engin add(TextFormField) and shokol search(QuerySnapshot) show

Future<QuerySnapshot>searchResultFuture;
  TextEditingController controller;
  
  handleSearch(String query){
    String s='';
    for(int i=0;i<query.length;i++){
      if(i==0)
        s+=query[i].toUpperCase();
      s+=query[i];
    }
    query=s;
    Future <QuerySnapshot> users=userRef.where('displayname',isGreaterThanOrEqualTo: query).limit(7).getDocuments();

    setState(() {
      searchResultFuture=users;
    });

  }

AppBar(
     backgroundColor: Colors.white,
     title: TextFormField(
       style: TextStyle(
         fontSize: 20,
         color: Colors.purple,
       ),
       controller: controller,
       autofocus: true,
       decoration: InputDecoration(
           hintText: 'Search here',
           hintStyle: TextStyle(
             fontSize: 20,
             color: Colors.purple,
           ),
           filled: true,
           prefix: Icon(Icons.account_box,size: 28,color: Colors.grey,),
           suffix: IconButton(
             icon: Icon(Icons.clear,size: 28,color: Colors.grey,),
             onPressed: (){
               //  print('cleared');
               controller.clear();
             },
           )
       ),
       onFieldSubmitted: handleSearch,///////////////khub e important
     ),

   );//AppBar
   
   ////////////////////////////////////////////////////////////////////////////////
   
   Orientation LandScape naki potraite
   
    Orientation or=MediaQuery.of(context).orientation;
    return Container(
      child: Center(
       child: SvgPicture.asset('assets/images/search.svg',
          height: or==Orientation.landscape ? 150:350
        ),),);
   ////////////////////////////////////////////////////////////////////
   RaisedButton
   
   RaisedButton(
              child: Text('Upload',
              style: TextStyle(
                color: Colors.white54,
                fontSize: 22,
              ),
              ),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(10),
              ),
              color: Colors.deepOrange,
              onPressed: (){
              //    print('pressed');
                selectImage(context);
              },

            ),//RaisedButton
/////////////////////////////////////////////////////////////////

Compressed Image..........just eta call korle e hobe

 compressedImage()async{
    final tempDir=await getTemporaryDirectory();
    final path=  tempDir.path;
    Im.Image imgFile = Im.decodeImage(file.readAsBytesSync());
    
    final compressedFile=File('$path/img_$postId.jpg')..writeAsBytesSync(Im.encodeJpg(imgFile,quality: 85));
    setState(() {
      file=compressedFile;
    });
    
  }
  /////////////////////////////////////////////////////////////////////////
   /////////////////////////////////////////////////////////////////////////
   FireStorage e image addition
   final StorageReference storageReference=FirebaseStorage.instance.ref();
   
    Future<String> uploadImage(imgFile)async{

   StorageUploadTask storageUploadTask =await storageReference.child('post_$postId.jpg').putFile(imgFile);

   StorageTaskSnapshot storageTaskSnapshot  =await storageUploadTask.onComplete;

  String downUrl=await storageTaskSnapshot.ref.getDownloadURL();
  return downUrl;
  }
  EY downUrl ta dea FIRESTORE E IMAGER E R LINK RAKHA HOI mediaUrl hishebe
    /////////////////////////////////////////////////////////////////////////
    
    
  bam pashe icon/circular avater shoho textField
  
    ListTile(
            leading: CircleAvatar(
              backgroundImage: CachedNetworkImageProvider(widget.currentUser.photoUrl),
              backgroundColor: Colors.grey,

            ),
            title: Container(
              height: 120,
              child: TextField(
                controller: captionController,
                decoration: InputDecoration(
                  hintText: 'Write a Caption',
                  border: InputBorder.none,

                ),
              ),
            ),
          ),//listTile
   //////////////////////////////////////////////////////////////////////////////
   button e click kore e location get and location value kono textFiekd e addd
   
     Container(
            height: 100,
            width: 200,
            alignment: Alignment.center,
            child: RaisedButton.icon(
              color: Colors.blueAccent,
              icon: Icon(Icons.my_location,
              color: Colors.white,
              ),
              label: Text('Use Current location',
              style: TextStyle(
                color: Colors.white,
              ),
              ),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(30)
              ),
              onPressed: ()async{
               final Position position=await Geolocator().getCurrentPosition(desiredAccuracy: LocationAccuracy.high);
                List<Placemark>placemarks=await Geolocator().placemarkFromCoordinates(position.latitude, position.longitude);
                Placemark placemark=placemarks[0];
                String formattedAddress='${placemark.locality},${placemark.country}';

                setState(() {
                  locationController.text=formattedAddress;
                });
              },
            ),
          )//container
   
   
   
   
   
   
   
   
